# print("lesson2")

# 1. Создать список и заполнить его элементами различных типов данных.
# Реализовать скрипт проверки типа данных каждого элемента.
# Использовать функцию type() для проверки типа.
# Элементы списка можно не запрашивать у пользователя, а указать явно, в программе.

# int = 2
# int_2 = 35
# float = 4.4
# str = "slovo"
# my_list = [int, int_2, float, str]
# for a in my_list:
#     print(f'{a} in {type(a)}')

# 2. Для списка реализовать обмен значений соседних элементов.
# Значениями обмениваются элементы с индексами 0 и 1, 2 и 3 и т. д.
# При нечётном количестве элементов последний сохранить на своём месте.
# Для заполнения списка элементов нужно использовать функцию input().

# elements = input("Добавить элемент нашего списка: ").split(',')
# elements[:-1:2], elements[1::2] = elements[1::2], elements[:-1:2]
# print(f'Обмен значений соседних элементов списка: {elements} ')

# 3. Пользователь вводит месяц в виде целого числа от 1 до 12.
# Сообщить, к какому времени года относится месяц (зима, весна, лето, осень).
# Напишите решения через list и dict.

# number_month = int(input('Введите цифру месяца'))
# seasons = {1 : 'зима', 2 : 'весна', 3 : 'лето', 4 : 'осень'}
# seasons_list = ['зима', 'весна', 'лето', 'осень']
# if number_month == 3 or number_month == 4 or number_month == 5:
#     print(f'Месяц: {seasons_list[1]}')
#     print(f'Месяц: {seasons.get(2)}')
# elif number_month == 6 or number_month == 7 or number_month == 8:
#     print(f'Месяц: {seasons_list[2]}')
#     print(f'Месяц: {seasons.get(3)}')
# elif number_month == 9 or number_month == 10 or number_month == 11:
#     print(f'Месяц: {seasons_list[3]}')
#     print(f'Месяц: {seasons.get(4)}')
# elif number_month == 12 or number_month == 1 or number_month == 2:
#     print(f'Месяц: {seasons_list[0]}')
#     print(f'Месяц: {seasons.get(1)}')

# Пользователь вводит строку из нескольких слов, разделённых пробелами.
# Вывести каждое слово с новой строки.
# Строки нужно пронумеровать.
# Если слово длинное, выводить только первые 10 букв в слове.

# stroka = input("Введите ваше слово(слова): ")
# s = stroka.split(' ')
# for b, el in enumerate(s, 1):
#     if len(el) >= 10:
#         el = el[0:10]
#     print(f'{b})  {el}')

# 5. Реализовать структуру «Рейтинг», представляющую собой набор натуральных чисел, который не возрастает.
# У пользователя нужно запрашивать новый элемент рейтинга.
# Если в рейтинге существуют элементы с одинаковыми значениями, то новый элемент с тем же значением должен разместиться после них.

# my_list = [7, 5, 3, 3, 2]
# chislo = int(input('Введите число до 10: '))
# while chislo <= 10:
#     for el in range(len(my_list)):
#           if my_list[el] == chislo:
#              my_list.insert(el, chislo)
#              break
#           elif my_list[0] < chislo:
#                  my_list.insert(0, chislo)
#           elif my_list[-1] > chislo:
#                     my_list.append(chislo)
#     print(f"Рейтинг {my_list}")
#     chislo = int(input('Введите число до 10: '))

# не понимаю почему не могу ввести цифры 4 и 6, 9 они не появляются в списке.

# 6. Задание разбирали на занятии
